// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ShakesGodmist.Models;

#nullable disable

namespace GameBackend.Migrations
{
    [DbContext(typeof(GameContext))]
    partial class GameContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ShakesGodmist.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ConstitutionBonus")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DexterityBonus")
                        .HasColumnType("integer");

                    b.Property<int>("IntelligenceBonus")
                        .HasColumnType("integer");

                    b.Property<bool>("IsEquipped")
                        .HasColumnType("boolean");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("LuckBonus")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("StrengthBonus")
                        .HasColumnType("integer");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<int>("Value")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConstitutionBonus = 0,
                            Description = "A sturdy iron sword",
                            DexterityBonus = 0,
                            IntelligenceBonus = 0,
                            IsEquipped = false,
                            Level = 1,
                            LuckBonus = 0,
                            Name = "Iron Sword",
                            StrengthBonus = 5,
                            Type = 1,
                            Value = 50
                        },
                        new
                        {
                            Id = 2,
                            ConstitutionBonus = 3,
                            Description = "Basic leather protection",
                            DexterityBonus = 0,
                            IntelligenceBonus = 0,
                            IsEquipped = false,
                            Level = 1,
                            LuckBonus = 0,
                            Name = "Leather Armor",
                            StrengthBonus = 0,
                            Type = 3,
                            Value = 30
                        },
                        new
                        {
                            Id = 3,
                            ConstitutionBonus = 0,
                            Description = "A staff imbued with magic",
                            DexterityBonus = 0,
                            IntelligenceBonus = 5,
                            IsEquipped = false,
                            Level = 1,
                            LuckBonus = 0,
                            Name = "Magic Staff",
                            StrengthBonus = 0,
                            Type = 1,
                            Value = 60
                        });
                });

            modelBuilder.Entity("ShakesGodmist.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Class")
                        .HasColumnType("integer");

                    b.Property<int>("Constitution")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Dexterity")
                        .HasColumnType("integer");

                    b.Property<int>("Experience")
                        .HasColumnType("integer");

                    b.Property<int>("Gold")
                        .HasColumnType("integer");

                    b.Property<int>("Intelligence")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<int>("Luck")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("Strength")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("ShakesGodmist.Models.Quest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Duration")
                        .HasColumnType("double precision");

                    b.Property<int>("ExperienceReward")
                        .HasColumnType("integer");

                    b.Property<int>("Focus")
                        .HasColumnType("integer");

                    b.Property<int>("GoldReward")
                        .HasColumnType("integer");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("RequiredLevel")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Quests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Hunt goblins in the forest",
                            Duration = 30.0,
                            ExperienceReward = 50,
                            Focus = 0,
                            GoldReward = 25,
                            IsCompleted = false,
                            Name = "Goblin Hunt",
                            RequiredLevel = 1,
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Help at the local tavern",
                            Duration = 60.0,
                            ExperienceReward = 30,
                            Focus = 0,
                            GoldReward = 50,
                            IsCompleted = false,
                            Name = "Tavern Work",
                            RequiredLevel = 1,
                            Type = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "Train in the arena",
                            Duration = 45.0,
                            ExperienceReward = 75,
                            Focus = 0,
                            GoldReward = 15,
                            IsCompleted = false,
                            Name = "Arena Training",
                            RequiredLevel = 2,
                            Type = 3
                        });
                });

            modelBuilder.Entity("ShakesGodmist.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ShakesGodmist.Models.Item", b =>
                {
                    b.HasOne("ShakesGodmist.Models.Player", "Player")
                        .WithMany("Items")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Player");
                });

            modelBuilder.Entity("ShakesGodmist.Models.Player", b =>
                {
                    b.HasOne("ShakesGodmist.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ShakesGodmist.Models.Quest", b =>
                {
                    b.HasOne("ShakesGodmist.Models.Player", "Player")
                        .WithMany("ActiveQuests")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Player");
                });

            modelBuilder.Entity("ShakesGodmist.Models.Player", b =>
                {
                    b.Navigation("ActiveQuests");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("ShakesGodmist.Models.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
